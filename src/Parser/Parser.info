-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.9 from src/Parser/Parser.y
-----------------------------------------------------------------------------

state 4 contains 1 shift/reduce conflicts.
state 13 contains 1 shift/reduce conflicts.

terminal ";;" is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parseProgram -> Prog                        (0)
	Prog -> Expr eof                                   (1)
	Expr -> Clauses                                    (2)
	Clauses -> Clause ";" Clauses                      (3)
	Clauses -> Clauses ";"                             (4)
	Clauses -> Clause                                  (5)
	Clause -> Variable "=" ClauseBody                  (6)
	Variable -> Identifier                             (7)
	Identifier -> id                                   (8)
	ClauseBody -> Value                                (9)
	ClauseBody -> Variable                             (10)
	ClauseBody -> Variable Variable CallSiteAnnots     (11)
	ClauseBody -> Variable "~" Pattern "?" FunctionValue ":" FunctionValue   (12)
	ClauseBody -> Variable "." id                      (13)
	ClauseBody -> Variable "+" Variable                (14)
	ClauseBody -> Variable "-" Variable                (15)
	ClauseBody -> Variable "<" Variable                (16)
	ClauseBody -> Variable "<=" Variable               (17)
	ClauseBody -> Variable "==" Variable               (18)
	ClauseBody -> Variable "and" Variable              (19)
	ClauseBody -> Variable "or" Variable               (20)
	ClauseBody -> "not" Variable                       (21)
	CallSiteAnnots ->                                  (22)
	CallSiteAnnots -> CallSiteAnnot CallSiteAnnots     (23)
	CallSiteAnnot -> "@@acontextual"                   (24)
	CallSiteAnnot -> "@@acontextual" "(" id ")"        (25)
	Value -> RecordValue                               (26)
	Value -> FunctionValue                             (27)
	Value -> IntValue                                  (28)
	Value -> BoolValue                                 (29)
	RecordValue -> "{" "}"                             (30)
	RecordValue -> "{" RecordEntries "}"               (31)
	RecordEntry -> Identifier "=" Variable             (32)
	RecPat -> Identifier "=" Pattern                   (33)
	RecordEntries -> RecordEntries "," RecordEntry     (34)
	RecordEntries -> RecordEntries ","                 (35)
	RecordEntries -> RecordEntry                       (36)
	RecPats -> RecPats "," RecPat                      (37)
	RecPats -> RecPats ","                             (38)
	RecPats -> RecPat                                  (39)
	FunctionValue -> "fun" Variable "->" "(" Expr ")"   (40)
	IntValue -> int                                    (41)
	BoolValue -> "true"                                (42)
	BoolValue -> "false"                               (43)
	Pattern -> RecordPattern                           (44)
	Pattern -> "fun"                                   (45)
	Pattern -> "int"                                   (46)
	Pattern -> BoolPattern                             (47)
	Pattern -> "any"                                   (48)
	Pattern -> "_"                                     (49)
	RecordPattern -> "{" "}"                           (50)
	RecordPattern -> "{" RecPats "}"                   (51)
	BoolPattern -> "true"                              (52)
	BoolPattern -> "false"                             (53)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	"{"            { T.OpenBrace }
	"}"            { T.CloseBrace }
	"("            { T.OpenParent }
	")"            { T.CloseParent }
	";"            { T.Semicolon }
	","            { T.Comma }
	"="            { T.Equals }
	"->"           { T.Arrow }
	"?"            { T.QuestionMark }
	"~"            { T.Tilde }
	":"            { T.Colon }
	"."            { T.Dot }
	"@@acontextual"{ T.AnnotationAcontextual }
	"fun"          { T.KeywordFun }
	"int"          { T.KeywordInt }
	"true"         { T.KeywordTrue }
	"false"        { T.KeywordFalse }
	"and"          { T.KeywordAnd }
	"or"           { T.KeywordOr }
	"not"          { T.KeywordNot }
	"any"          { T.KeywordAny }
	"_"            { T.Underscore }
	"+"            { T.BinOpPlus }
	"-"            { T.BinOpMinus }
	"<"            { T.BinOpLess }
	"<="           { T.BinOpLessEqual }
	"=="           { T.BinOpEqual }
	int            { T.Integer $$ }
	id             { T.Ident $$ }
	";;"           { T.DoubleSemicolon }
	eof            { T.EOF }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parseProgram rule  0
	Prog            rule  1
	Expr            rule  2
	Clauses         rules 3, 4, 5
	Clause          rule  6
	Variable        rule  7
	Identifier      rule  8
	ClauseBody      rules 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21
	CallSiteAnnots  rules 22, 23
	CallSiteAnnot   rules 24, 25
	Value           rules 26, 27, 28, 29
	RecordValue     rules 30, 31
	RecordEntry     rule  32
	RecPat          rule  33
	RecordEntries   rules 34, 35, 36
	RecPats         rules 37, 38, 39
	FunctionValue   rule  40
	IntValue        rule  41
	BoolValue       rules 42, 43
	Pattern         rules 44, 45, 46, 47, 48, 49
	RecordPattern   rules 50, 51
	BoolPattern     rules 52, 53

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	id             shift, and enter state 7

	Prog           goto state 8
	Expr           goto state 2
	Clauses        goto state 3
	Clause         goto state 4
	Variable       goto state 5
	Identifier     goto state 6

State 1


	id             shift, and enter state 7

	Expr           goto state 2
	Clauses        goto state 3
	Clause         goto state 4
	Variable       goto state 5
	Identifier     goto state 6

State 2

	Prog -> Expr . eof                                  (rule 1)

	eof            shift, and enter state 12


State 3

	Expr -> Clauses .                                   (rule 2)
	Clauses -> Clauses . ";"                            (rule 4)

	")"            reduce using rule 2
	";"            shift, and enter state 11
	eof            reduce using rule 2


State 4

	Clauses -> Clause . ";" Clauses                     (rule 3)
	Clauses -> Clause .                                 (rule 5)

	")"            reduce using rule 5
	";"            shift, and enter state 10
			(reduce using rule 5)

	eof            reduce using rule 5


State 5

	Clause -> Variable . "=" ClauseBody                 (rule 6)

	"="            shift, and enter state 9


State 6

	Variable -> Identifier .                            (rule 7)

	"}"            reduce using rule 7
	")"            reduce using rule 7
	";"            reduce using rule 7
	","            reduce using rule 7
	"="            reduce using rule 7
	"->"           reduce using rule 7
	"~"            reduce using rule 7
	"."            reduce using rule 7
	"@@acontextual"reduce using rule 7
	"and"          reduce using rule 7
	"or"           reduce using rule 7
	"+"            reduce using rule 7
	"-"            reduce using rule 7
	"<"            reduce using rule 7
	"<="           reduce using rule 7
	"=="           reduce using rule 7
	id             reduce using rule 7
	eof            reduce using rule 7


State 7

	Identifier -> id .                                  (rule 8)

	"}"            reduce using rule 8
	")"            reduce using rule 8
	";"            reduce using rule 8
	","            reduce using rule 8
	"="            reduce using rule 8
	"->"           reduce using rule 8
	"~"            reduce using rule 8
	"."            reduce using rule 8
	"@@acontextual"reduce using rule 8
	"and"          reduce using rule 8
	"or"           reduce using rule 8
	"+"            reduce using rule 8
	"-"            reduce using rule 8
	"<"            reduce using rule 8
	"<="           reduce using rule 8
	"=="           reduce using rule 8
	id             reduce using rule 8
	eof            reduce using rule 8


State 8

	%start_parseProgram -> Prog .                       (rule 0)

	%eof           accept


State 9

	Clause -> Variable "=" . ClauseBody                 (rule 6)

	"{"            shift, and enter state 21
	"fun"          shift, and enter state 22
	"true"         shift, and enter state 23
	"false"        shift, and enter state 24
	"not"          shift, and enter state 25
	int            shift, and enter state 26
	id             shift, and enter state 7

	Variable       goto state 14
	Identifier     goto state 6
	ClauseBody     goto state 15
	Value          goto state 16
	RecordValue    goto state 17
	FunctionValue  goto state 18
	IntValue       goto state 19
	BoolValue      goto state 20

State 10

	Clauses -> Clause ";" . Clauses                     (rule 3)

	id             shift, and enter state 7

	Clauses        goto state 13
	Clause         goto state 4
	Variable       goto state 5
	Identifier     goto state 6

State 11

	Clauses -> Clauses ";" .                            (rule 4)

	")"            reduce using rule 4
	";"            reduce using rule 4
	eof            reduce using rule 4


State 12

	Prog -> Expr eof .                                  (rule 1)

	%eof           reduce using rule 1


State 13

	Clauses -> Clause ";" Clauses .                     (rule 3)
	Clauses -> Clauses . ";"                            (rule 4)

	")"            reduce using rule 3
	";"            shift, and enter state 11
			(reduce using rule 3)

	eof            reduce using rule 3


State 14

	ClauseBody -> Variable .                            (rule 10)
	ClauseBody -> Variable . Variable CallSiteAnnots    (rule 11)
	ClauseBody -> Variable . "~" Pattern "?" FunctionValue ":" FunctionValue    (rule 12)
	ClauseBody -> Variable . "." id                     (rule 13)
	ClauseBody -> Variable . "+" Variable               (rule 14)
	ClauseBody -> Variable . "-" Variable               (rule 15)
	ClauseBody -> Variable . "<" Variable               (rule 16)
	ClauseBody -> Variable . "<=" Variable              (rule 17)
	ClauseBody -> Variable . "==" Variable              (rule 18)
	ClauseBody -> Variable . "and" Variable             (rule 19)
	ClauseBody -> Variable . "or" Variable              (rule 20)

	")"            reduce using rule 10
	";"            reduce using rule 10
	"~"            shift, and enter state 34
	"."            shift, and enter state 35
	"and"          shift, and enter state 36
	"or"           shift, and enter state 37
	"+"            shift, and enter state 38
	"-"            shift, and enter state 39
	"<"            shift, and enter state 40
	"<="           shift, and enter state 41
	"=="           shift, and enter state 42
	id             shift, and enter state 7
	eof            reduce using rule 10

	Variable       goto state 33
	Identifier     goto state 6

State 15

	Clause -> Variable "=" ClauseBody .                 (rule 6)

	")"            reduce using rule 6
	";"            reduce using rule 6
	eof            reduce using rule 6


State 16

	ClauseBody -> Value .                               (rule 9)

	")"            reduce using rule 9
	";"            reduce using rule 9
	eof            reduce using rule 9


State 17

	Value -> RecordValue .                              (rule 26)

	")"            reduce using rule 26
	";"            reduce using rule 26
	eof            reduce using rule 26


State 18

	Value -> FunctionValue .                            (rule 27)

	")"            reduce using rule 27
	";"            reduce using rule 27
	eof            reduce using rule 27


State 19

	Value -> IntValue .                                 (rule 28)

	")"            reduce using rule 28
	";"            reduce using rule 28
	eof            reduce using rule 28


State 20

	Value -> BoolValue .                                (rule 29)

	")"            reduce using rule 29
	";"            reduce using rule 29
	eof            reduce using rule 29


State 21

	RecordValue -> "{" . "}"                            (rule 30)
	RecordValue -> "{" . RecordEntries "}"              (rule 31)

	"}"            shift, and enter state 32
	id             shift, and enter state 7

	Identifier     goto state 29
	RecordEntry    goto state 30
	RecordEntries  goto state 31

State 22

	FunctionValue -> "fun" . Variable "->" "(" Expr ")"    (rule 40)

	id             shift, and enter state 7

	Variable       goto state 28
	Identifier     goto state 6

State 23

	BoolValue -> "true" .                               (rule 42)

	")"            reduce using rule 42
	";"            reduce using rule 42
	eof            reduce using rule 42


State 24

	BoolValue -> "false" .                              (rule 43)

	")"            reduce using rule 43
	";"            reduce using rule 43
	eof            reduce using rule 43


State 25

	ClauseBody -> "not" . Variable                      (rule 21)

	id             shift, and enter state 7

	Variable       goto state 27
	Identifier     goto state 6

State 26

	IntValue -> int .                                   (rule 41)

	")"            reduce using rule 41
	";"            reduce using rule 41
	eof            reduce using rule 41


State 27

	ClauseBody -> "not" Variable .                      (rule 21)

	")"            reduce using rule 21
	";"            reduce using rule 21
	eof            reduce using rule 21


State 28

	FunctionValue -> "fun" Variable . "->" "(" Expr ")"    (rule 40)

	"->"           shift, and enter state 67


State 29

	RecordEntry -> Identifier . "=" Variable            (rule 32)

	"="            shift, and enter state 66


State 30

	RecordEntries -> RecordEntry .                      (rule 36)

	"}"            reduce using rule 36
	","            reduce using rule 36


State 31

	RecordValue -> "{" RecordEntries . "}"              (rule 31)
	RecordEntries -> RecordEntries . "," RecordEntry    (rule 34)
	RecordEntries -> RecordEntries . ","                (rule 35)

	"}"            shift, and enter state 64
	","            shift, and enter state 65


State 32

	RecordValue -> "{" "}" .                            (rule 30)

	")"            reduce using rule 30
	";"            reduce using rule 30
	eof            reduce using rule 30


State 33

	ClauseBody -> Variable Variable . CallSiteAnnots    (rule 11)

	")"            reduce using rule 22
	";"            reduce using rule 22
	"@@acontextual"shift, and enter state 63
	eof            reduce using rule 22

	CallSiteAnnots goto state 61
	CallSiteAnnot  goto state 62

State 34

	ClauseBody -> Variable "~" . Pattern "?" FunctionValue ":" FunctionValue    (rule 12)

	"{"            shift, and enter state 54
	"fun"          shift, and enter state 55
	"int"          shift, and enter state 56
	"true"         shift, and enter state 57
	"false"        shift, and enter state 58
	"any"          shift, and enter state 59
	"_"            shift, and enter state 60

	Pattern        goto state 51
	RecordPattern  goto state 52
	BoolPattern    goto state 53

State 35

	ClauseBody -> Variable "." . id                     (rule 13)

	id             shift, and enter state 50


State 36

	ClauseBody -> Variable "and" . Variable             (rule 19)

	id             shift, and enter state 7

	Variable       goto state 49
	Identifier     goto state 6

State 37

	ClauseBody -> Variable "or" . Variable              (rule 20)

	id             shift, and enter state 7

	Variable       goto state 48
	Identifier     goto state 6

State 38

	ClauseBody -> Variable "+" . Variable               (rule 14)

	id             shift, and enter state 7

	Variable       goto state 47
	Identifier     goto state 6

State 39

	ClauseBody -> Variable "-" . Variable               (rule 15)

	id             shift, and enter state 7

	Variable       goto state 46
	Identifier     goto state 6

State 40

	ClauseBody -> Variable "<" . Variable               (rule 16)

	id             shift, and enter state 7

	Variable       goto state 45
	Identifier     goto state 6

State 41

	ClauseBody -> Variable "<=" . Variable              (rule 17)

	id             shift, and enter state 7

	Variable       goto state 44
	Identifier     goto state 6

State 42

	ClauseBody -> Variable "==" . Variable              (rule 18)

	id             shift, and enter state 7

	Variable       goto state 43
	Identifier     goto state 6

State 43

	ClauseBody -> Variable "==" Variable .              (rule 18)

	")"            reduce using rule 18
	";"            reduce using rule 18
	eof            reduce using rule 18


State 44

	ClauseBody -> Variable "<=" Variable .              (rule 17)

	")"            reduce using rule 17
	";"            reduce using rule 17
	eof            reduce using rule 17


State 45

	ClauseBody -> Variable "<" Variable .               (rule 16)

	")"            reduce using rule 16
	";"            reduce using rule 16
	eof            reduce using rule 16


State 46

	ClauseBody -> Variable "-" Variable .               (rule 15)

	")"            reduce using rule 15
	";"            reduce using rule 15
	eof            reduce using rule 15


State 47

	ClauseBody -> Variable "+" Variable .               (rule 14)

	")"            reduce using rule 14
	";"            reduce using rule 14
	eof            reduce using rule 14


State 48

	ClauseBody -> Variable "or" Variable .              (rule 20)

	")"            reduce using rule 20
	";"            reduce using rule 20
	eof            reduce using rule 20


State 49

	ClauseBody -> Variable "and" Variable .             (rule 19)

	")"            reduce using rule 19
	";"            reduce using rule 19
	eof            reduce using rule 19


State 50

	ClauseBody -> Variable "." id .                     (rule 13)

	")"            reduce using rule 13
	";"            reduce using rule 13
	eof            reduce using rule 13


State 51

	ClauseBody -> Variable "~" Pattern . "?" FunctionValue ":" FunctionValue    (rule 12)

	"?"            shift, and enter state 77


State 52

	Pattern -> RecordPattern .                          (rule 44)

	"}"            reduce using rule 44
	","            reduce using rule 44
	"?"            reduce using rule 44


State 53

	Pattern -> BoolPattern .                            (rule 47)

	"}"            reduce using rule 47
	","            reduce using rule 47
	"?"            reduce using rule 47


State 54

	RecordPattern -> "{" . "}"                          (rule 50)
	RecordPattern -> "{" . RecPats "}"                  (rule 51)

	"}"            shift, and enter state 76
	id             shift, and enter state 7

	Identifier     goto state 73
	RecPat         goto state 74
	RecPats        goto state 75

State 55

	Pattern -> "fun" .                                  (rule 45)

	"}"            reduce using rule 45
	","            reduce using rule 45
	"?"            reduce using rule 45


State 56

	Pattern -> "int" .                                  (rule 46)

	"}"            reduce using rule 46
	","            reduce using rule 46
	"?"            reduce using rule 46


State 57

	BoolPattern -> "true" .                             (rule 52)

	"}"            reduce using rule 52
	","            reduce using rule 52
	"?"            reduce using rule 52


State 58

	BoolPattern -> "false" .                            (rule 53)

	"}"            reduce using rule 53
	","            reduce using rule 53
	"?"            reduce using rule 53


State 59

	Pattern -> "any" .                                  (rule 48)

	"}"            reduce using rule 48
	","            reduce using rule 48
	"?"            reduce using rule 48


State 60

	Pattern -> "_" .                                    (rule 49)

	"}"            reduce using rule 49
	","            reduce using rule 49
	"?"            reduce using rule 49


State 61

	ClauseBody -> Variable Variable CallSiteAnnots .    (rule 11)

	")"            reduce using rule 11
	";"            reduce using rule 11
	eof            reduce using rule 11


State 62

	CallSiteAnnots -> CallSiteAnnot . CallSiteAnnots    (rule 23)

	")"            reduce using rule 22
	";"            reduce using rule 22
	"@@acontextual"shift, and enter state 63
	eof            reduce using rule 22

	CallSiteAnnots goto state 72
	CallSiteAnnot  goto state 62

State 63

	CallSiteAnnot -> "@@acontextual" .                  (rule 24)
	CallSiteAnnot -> "@@acontextual" . "(" id ")"       (rule 25)

	"("            shift, and enter state 71
	")"            reduce using rule 24
	";"            reduce using rule 24
	"@@acontextual"reduce using rule 24
	eof            reduce using rule 24


State 64

	RecordValue -> "{" RecordEntries "}" .              (rule 31)

	")"            reduce using rule 31
	";"            reduce using rule 31
	eof            reduce using rule 31


State 65

	RecordEntries -> RecordEntries "," . RecordEntry    (rule 34)
	RecordEntries -> RecordEntries "," .                (rule 35)

	"}"            reduce using rule 35
	","            reduce using rule 35
	id             shift, and enter state 7

	Identifier     goto state 29
	RecordEntry    goto state 70

State 66

	RecordEntry -> Identifier "=" . Variable            (rule 32)

	id             shift, and enter state 7

	Variable       goto state 69
	Identifier     goto state 6

State 67

	FunctionValue -> "fun" Variable "->" . "(" Expr ")"    (rule 40)

	"("            shift, and enter state 68


State 68

	FunctionValue -> "fun" Variable "->" "(" . Expr ")"    (rule 40)

	id             shift, and enter state 7

	Expr           goto state 83
	Clauses        goto state 3
	Clause         goto state 4
	Variable       goto state 5
	Identifier     goto state 6

State 69

	RecordEntry -> Identifier "=" Variable .            (rule 32)

	"}"            reduce using rule 32
	","            reduce using rule 32


State 70

	RecordEntries -> RecordEntries "," RecordEntry .    (rule 34)

	"}"            reduce using rule 34
	","            reduce using rule 34


State 71

	CallSiteAnnot -> "@@acontextual" "(" . id ")"       (rule 25)

	id             shift, and enter state 82


State 72

	CallSiteAnnots -> CallSiteAnnot CallSiteAnnots .    (rule 23)

	")"            reduce using rule 23
	";"            reduce using rule 23
	eof            reduce using rule 23


State 73

	RecPat -> Identifier . "=" Pattern                  (rule 33)

	"="            shift, and enter state 81


State 74

	RecPats -> RecPat .                                 (rule 39)

	"}"            reduce using rule 39
	","            reduce using rule 39


State 75

	RecPats -> RecPats . "," RecPat                     (rule 37)
	RecPats -> RecPats . ","                            (rule 38)
	RecordPattern -> "{" RecPats . "}"                  (rule 51)

	"}"            shift, and enter state 79
	","            shift, and enter state 80


State 76

	RecordPattern -> "{" "}" .                          (rule 50)

	"}"            reduce using rule 50
	","            reduce using rule 50
	"?"            reduce using rule 50


State 77

	ClauseBody -> Variable "~" Pattern "?" . FunctionValue ":" FunctionValue    (rule 12)

	"fun"          shift, and enter state 22

	FunctionValue  goto state 78

State 78

	ClauseBody -> Variable "~" Pattern "?" FunctionValue . ":" FunctionValue    (rule 12)

	":"            shift, and enter state 88


State 79

	RecordPattern -> "{" RecPats "}" .                  (rule 51)

	"}"            reduce using rule 51
	","            reduce using rule 51
	"?"            reduce using rule 51


State 80

	RecPats -> RecPats "," . RecPat                     (rule 37)
	RecPats -> RecPats "," .                            (rule 38)

	"}"            reduce using rule 38
	","            reduce using rule 38
	id             shift, and enter state 7

	Identifier     goto state 73
	RecPat         goto state 87

State 81

	RecPat -> Identifier "=" . Pattern                  (rule 33)

	"{"            shift, and enter state 54
	"fun"          shift, and enter state 55
	"int"          shift, and enter state 56
	"true"         shift, and enter state 57
	"false"        shift, and enter state 58
	"any"          shift, and enter state 59
	"_"            shift, and enter state 60

	Pattern        goto state 86
	RecordPattern  goto state 52
	BoolPattern    goto state 53

State 82

	CallSiteAnnot -> "@@acontextual" "(" id . ")"       (rule 25)

	")"            shift, and enter state 85


State 83

	FunctionValue -> "fun" Variable "->" "(" Expr . ")"    (rule 40)

	")"            shift, and enter state 84


State 84

	FunctionValue -> "fun" Variable "->" "(" Expr ")" .    (rule 40)

	")"            reduce using rule 40
	";"            reduce using rule 40
	":"            reduce using rule 40
	eof            reduce using rule 40


State 85

	CallSiteAnnot -> "@@acontextual" "(" id ")" .       (rule 25)

	")"            reduce using rule 25
	";"            reduce using rule 25
	"@@acontextual"reduce using rule 25
	eof            reduce using rule 25


State 86

	RecPat -> Identifier "=" Pattern .                  (rule 33)

	"}"            reduce using rule 33
	","            reduce using rule 33


State 87

	RecPats -> RecPats "," RecPat .                     (rule 37)

	"}"            reduce using rule 37
	","            reduce using rule 37


State 88

	ClauseBody -> Variable "~" Pattern "?" FunctionValue ":" . FunctionValue    (rule 12)

	"fun"          shift, and enter state 22

	FunctionValue  goto state 89

State 89

	ClauseBody -> Variable "~" Pattern "?" FunctionValue ":" FunctionValue .    (rule 12)

	")"            reduce using rule 12
	";"            reduce using rule 12
	eof            reduce using rule 12


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 54
Number of terminals: 31
Number of non-terminals: 22
Number of states: 90
